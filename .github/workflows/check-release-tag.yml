name: Check Release Tag

on:
  pull_request:
    branches:
      - master
      - stable
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled

jobs:
  check-release-tag:
    name: Verify Release Tag
    # Only run on PRs targeting master or stable
    if: github.base_ref == 'master' || github.base_ref == 'stable'
    runs-on: ubuntu-latest
    steps:
      - name: Check 'release/tagged' status on PR HEAD
        id: check-tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          STATUSES=$(gh api \
            -H "Accept: application/vnd.github+json" \
            "/repos/${{ github.repository }}/commits/${HEAD_SHA}/statuses")

          if echo "${STATUSES}" | jq -e '.[] | select(.context == "release/tagged" and .state == "success")' > /dev/null 2>&1; then
            echo "Release is properly tagged at PR HEAD"
            echo "tagged=true" >> "${GITHUB_OUTPUT}"
            echo "tag_sha=${HEAD_SHA}" >> "${GITHUB_OUTPUT}"

            # Set success status on PR HEAD
            gh api \
              --method POST \
              -H "Accept: application/vnd.github.v3+json" \
              /repos/${{ github.repository }}/statuses/${HEAD_SHA} \
              -f state='success' \
              -f target_url='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
              -f description='Release is properly tagged' \
              -f context='release/tag-check'
          else
            echo "::warning::No successful 'release/tagged' status found on PR HEAD"
            echo "tagged=false" >> "${GITHUB_OUTPUT}"

            # Set pending status on PR HEAD
            gh api \
              --method POST \
              -H "Accept: application/vnd.github.v3+json" \
              /repos/${{ github.repository }}/statuses/${HEAD_SHA} \
              -f state='pending' \
              -f target_url='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
              -f description='Tag missing on PR HEAD - run Tag Release Branch workflow' \
              -f context='release/tag-check'
          fi

      - name: Comment on PR if not tagged
        if: steps.check-tag.outputs.tagged != 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = '${{ github.head_ref }}';
            const workflowUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/workflows/tag-release-branch.yml`;
            const comment = `## Release Tag Required

            This release PR is not tagged at its HEAD commit.

            **Before merging this PR:**
            1. Run the **[Tag Release Branch](${workflowUrl})** workflow
            2. Inputs:
               - release-branch: \`${branch}\`
               - target-branch: \`${{ github.base_ref }}\`

            This will:
            - Create the release tag at the current HEAD of the release branch
            - Set the \`release/tagged\` status on that commit

            **Why this is important:**
            - Ensures the release tag points to the exact code that was tested
            - Aligns with MetaMask Mobile's release process
            - Prevents confusion between merge commits and release commits

            Once tagged, this check will automatically pass`;

            // Check if we already commented
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Release Tag Required')
            );

            if (!botComment) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: Summary
        run: |
          if [[ "${{ steps.check-tag.outputs.tagged }}" == "true" ]]; then
            {
              echo "### Release Tag Check Passed"
              echo "'release/tagged' status found on PR HEAD. Ready for merge."
            } >> "${GITHUB_STEP_SUMMARY}"
          else
            {
              echo "### Release Tag Check - Action Required"
              echo "Run the 'Tag Release Branch' workflow with inputs:"
              echo "- release-branch: ${{ github.head_ref }}"
              echo "- target-branch: ${{ github.base_ref }}"
            } >> "${GITHUB_STEP_SUMMARY}"
          fi
